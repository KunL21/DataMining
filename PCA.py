# -*- coding: utf-8 -*-
"""DataMining.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ALbaJawdCXmEuPYfPsmIZm_cr3U6fFo0
"""

import pandas as pd
import numpy as np
from numpy import linalg as LA
import operator
import matplotlib.pyplot as plt
import seaborn as sns
from numpy.linalg import svd
from sklearn.manifold import TSNE
import math
import copy
import time

"""# **Part 1**"""

def PCA(file):
  df = pd.read_csv(file, delimiter="\t", header=None)
  labels = df[df.columns[-1]]
  labels = labels.to_numpy()
  last_column = len(df.columns)-1
  df = df.loc[:, df.columns != last_column]
  df = df.to_numpy()
  mean_matrix = np.mean(df,axis=0)
  df = df - mean_matrix
  cov_matrix = (1/(len(df)-1))*np.dot(df.T,df)
  eig_value,eig_vector = LA.eig(cov_matrix)
  eig_value = list(eig_value)
  top_2_idx = []
  for x in range(2):
    max_idx = eig_value.index(max(eig_value))
    top_2_idx.append(max_idx)
    eig_value[max_idx] = -np.inf
  a = np.concatenate((eig_vector[:,top_2_idx[0]],eig_vector[:,top_2_idx[1]]),axis=0)
  eig_result = []
  length = int(len(a)/2)
  for x in range(length):
    eig_result.append( [a[x]]+ [a[x+length]])
  eig_result = np.array(eig_result)
  points = []
  for y in range(2):
    points.append(np.dot(eig_result.T[y],np.transpose(df)))
  d = {}
  for x in range(len(points)):
    col = 'x'+str(x+1)
    d[col] = points[x]
    d['label'] = labels
  plot_df = pd.DataFrame(data=d)
  plot_df = plot_df.groupby("label")
  for name, data in plot_df:
    plt.plot(data.x1, data.x2, marker="o", linestyle="", label=name)
  plt.title('PCA: '+file)
  plt.legend()
  plt.show()
  # plt.savefig('PCA:pca_c.png',dpi=600)



def SVD(file):
  df = pd.read_csv(file, delimiter="\t", header=None)
  labels = df[df.columns[-1]]
  labels = labels.to_numpy()
  last_column = len(df.columns)-1
  df = df.loc[:, df.columns != last_column]
  df = df.to_numpy()

  u,s,vh = np.linalg.svd(df)
  u = u[:,0:2]
  points = []
  for x in range(2):
    points.append(u[:,x])
  d = {}
  for x in range(len(points)):
    col = 'x'+str(x+1)
    d[col] = points[x]
    d['label'] = labels
  plot_df = pd.DataFrame(data=d)
  plot_df = plot_df.groupby("label")
  for name, data in plot_df:
    plt.plot(data.x1, data.x2, marker="o", linestyle="", label=name)
  plt.title('SVD: '+file)
  plt.legend()
  plt.show()
  #plt.savefig('SVD:pca_c.png',dpi=600)



def tSNE(file):
  df = pd.read_csv(file, delimiter="\t", header=None)
  labels = df[df.columns[-1]]
  labels = labels.to_numpy()
  last_column = len(df.columns)-1
  df = df.loc[:, df.columns != last_column]
  df = df.to_numpy()
  X = TSNE(n_components=2).fit_transform(df)
  points = []
  for x in range(2):
    points.append(X[:,x])
  d = {}
  for x in range(len(points)):
    col = 'x'+str(x+1)
    d[col] = points[x]
    d['label'] = labels
  plot_df = pd.DataFrame(data=d)
  plot_df = plot_df.groupby("label")
  for name, data in plot_df:
    plt.plot(data.x1, data.x2, marker="o", linestyle="", label=name)
  plt.title('TSNE: '+file)
  plt.legend()
  plt.show()
  #plt.savefig('TSNE:pca_c.png',dpi=600)



PCA("pca_demo.txt")
SVD("pca_demo.txt")
tSNE("pca_demo.txt")
